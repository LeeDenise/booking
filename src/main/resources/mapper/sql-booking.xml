<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="booking.mapper.BookingMapper">

	<!-- test -->
	<select id="test" resultType="booking.models.SecurityUser">
			SELECT
				client_id,
				email,
				first_name,
				last_name,
				phone
			FROM
				clients
	</select>

	<!-- BOOKING -->
	
	<!-- newBooking.do -->
	<!-- selectTherapistList -->
	<select id="selectTherapistList" resultType="booking.models.EmployeeDto">
			SELECT
				first_name,
				last_name,
				emp_no
			FROM
				therapist
	</select>
	
	<!-- selectBookingTherapist -->
	<select id="selectTherapist" parameterType="int" resultType="booking.models.BookingDto">
			SELECT
				start_time
			FROM
				appointment
			WHERE 
				emp_no = #{empNo}
			AND
				start_time >= date(NOW())
			AND
				(start_time, isLessThan(date_add(NOW(), INTERVAL + 7 DAY)))
			ORDER BY start_time ASC 
	</select>
	
	<!-- selectBookingTime -->
	<select id="selectBookingTime" parameterType="map" resultType="booking.models.BookingDto">
			SELECT
				start_time
			FROM
				appointment
			WHERE 
				emp_no = #{empNo}
			AND
				start_time >= #{selStartTime}
			AND
				(start_time, isLessThan(#{selEndTime}))
			ORDER BY start_time
	</select>
	
	<!-- insertBooking.do -->
	<insert id="insertBooking" parameterType="booking.models.BookingDto">
		INSERT INTO
			appointment (booking_no, emp_no, start_time, reg_time, client_id)
		VALUES 
			(
			#{bookingNo}, #{empNo}, #{startTime}, NOW(), #{clientId}
			)
	</insert>
	
	<select id="openUserBookingList" parameterType="String" resultType="booking.models.BookingListDto">
		SELECT a.booking_no as booking_no, a.emp_no as emp_no, a.start_time as start_time, b.first_name as first_name, b.last_name as last_name
		FROM appointment as a
		JOIN therapist as b
		ON a.emp_no = b.emp_no
		AND a.client_id = #{clientId}
		ORDER BY start_time DESC
	</select>
	
	<select id="bookingDetail" parameterType="String" resultType="booking.models.BookingDto">
			SELECT
				booking_no, 
				emp_no, 
				start_time
			FROM
				appointment
			WHERE 
				booking_no = #{bookingNo}
	</select>
	
	<select id="bookingTherapist" parameterType="String" resultType="booking.models.EmployeeDto">
			SELECT
				first_name,
				last_name
			FROM
				therapist
			WHERE 
				emp_no = #{empNo}
	</select>
	
	<update id="updateBooking" parameterType="booking.models.BookingDto">
			UPDATE
				appointment
			SET
				emp_no = #{empNo},
				start_time = #{startTime},
				edit_time = NOW()
			WHERE
				booking_no = #{bookingNo}
	</update>
	
	<delete id="cancelBooking" parameterType="String">
			DELETE FROM
				appointment
			WHERE 
				booking_no = #{bookingNo}
	</delete>
</mapper>